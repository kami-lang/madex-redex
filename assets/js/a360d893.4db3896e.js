"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[8881],{25275:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"examples/proguard","title":"Using ProGuard Rules with Redex","description":"The code and artifacts for this example are on GitHub.","source":"@site/docs/examples/proguard.md","sourceDirName":"examples","slug":"/examples/proguard","permalink":"/docs/examples/proguard","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"proguard","title":"Using ProGuard Rules with Redex"},"sidebar":"mySidebar","previous":{"title":"Usage","permalink":"/docs/getting_started/usage"},"next":{"title":"Redex Synth Pass Example","permalink":"/docs/examples/synth"}}');var i=a(74848),s=a(28453);const r={id:"proguard",title:"Using ProGuard Rules with Redex"},o=void 0,l={},c=[{value:"The Need To Control Shrinking",id:"the-need-to-control-shrinking",level:2},{value:"Example",id:"example",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Source for Example",id:"source-for-example",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["The code and artifacts for this example are on ",(0,i.jsx)(n.a,{href:"https://github.com/facebook/redex/tree/master/examples/ProguardExample",children:"GitHub"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Currently there is limited support for specifying ProGuard rules which\nRedex will try to honor when it considers deleting (shrinking) classes,\nmethods and fields."}),"\n",(0,i.jsx)(n.h2,{id:"the-need-to-control-shrinking",children:"The Need To Control Shrinking"}),"\n",(0,i.jsxs)(n.p,{children:["One of the optimizations that Redex performs is to remove interfaces that\nhave only one implementation. However, when there is a use of that interface\nthrough reflection or constructs like ",(0,i.jsx)(n.code,{children:"instanceof"})," then this is an unsafe\nremoval which should be prohibited by using a ProGuard rule."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"Consider the following interface:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package com.facebook.redex.examples.proguardexample;\n\npublic interface Greek {\n    int doubleWombat();\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"which only has one use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package com.facebook.redex.examples.proguardexample;\n\npublic class Alpha implements Greek {\n\n    private int wombat;\n\n    public Alpha () {\n        wombat = 21;\n    }\n\n    public int doubleWombat() {\n        return 2 * wombat;\n    }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"and is instantiated in a main activity as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package com.facebook.redex.examples.proguardexample;\n\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.widget.TextView;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        TextView textView = (TextView) findViewById(R.id.message);\n\n        Alpha alphaObject = new Alpha();\n        int ltuae = alphaObject.doubleWombat();\n        textView.setText("The answer is " + ltuae + "\\n");\n\n        try {\n            Class<?> greek = Class.forName("com.facebook.redex.examples.proguardexample.Greek");\n            if (greek.isInstance(alphaObject)) {\n                textView.append("Alpha is an instance of Greek");\n            } else {\n                textView.append("Alpha is not an instance of Greek");\n            }\n        } catch (ClassNotFoundException e) {\n            textView.append("ERROR: Greek interface not found");\n        }\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["When you make a release build of this application and then process it with Redex you will get a crash\nbecause the ",(0,i.jsx)(n.code,{children:"Greek"})," class will be removed because it only has a single implementation, but Redex\ndid not notice that ",(0,i.jsx)(n.code,{children:"Greek"})," is used as part of an ",(0,i.jsx)(n.code,{children:"instanceof"})," check (or there could have been some\nuse of reflection that mentioned the Greek class). Running the app gives the following output\non the display of the device:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Missing Greek interface",src:a(99752).A+"",width:"773",height:"292"})}),"\n",(0,i.jsxs)(n.p,{children:["You can instruct Redex to prevent a class or interface from begin deleted by providing\na ",(0,i.jsx)(n.a,{href:"http://proguard.sourceforge.net/manual/usage.html#keepoptions",children:"ProGuard"})," rule. In this\ncase we want to ensure the ",(0,i.jsx)(n.code,{children:"Greek"})," interface is not deleted:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"-keep interface com.facebook.redex.examples.proguardexample.Greek\n"})}),"\n",(0,i.jsx)(n.p,{children:"When you run Redex you can specify a single ProGuard file containing simple keep rules for classes\nand interfaces. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ redex -o myfasterapp.apk myapp.apk -P proguard-rules.pro --sign -s ~/.android/debug.keystore -p android\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now when you run the post-Redex APK you will notice that the ",(0,i.jsx)(n.code,{children:"Greek"})," class has not been stripped away:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"With Greek interface",src:a(87248).A+"",width:"772",height:"285"})}),"\n",(0,i.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsx)(n.p,{children:"Right now we support only simple keep annotations for classes and interfaces. Shortly we will provide\nsupport a richer subset of the ProGuard configuration language."}),"\n",(0,i.jsx)(n.h2,{id:"source-for-example",children:"Source for Example"}),"\n",(0,i.jsx)(n.p,{children:"The source code for this example can be found in this directory."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},99752:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/missing-greek-6bc348119a7c05656896e6cfdac0c9dc.png"},87248:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/with-greek-8c8cbe75a5e574fa9cba16ef234abd9b.png"}}]);